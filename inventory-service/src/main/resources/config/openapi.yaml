openapi: 3.0.0
info:
  version: 1.0.0
  title: Inventory service seate
  license:
    name: MIT
servers:
  - url: 'http://www.mservicetech.com/v1'
paths:
  /inventories:
    post:
      summary: Create a list of inventory
      operationId: newinventories
      requestBody:
        description: a new inventories
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Inventory'
      tags:
        - inventories
      security:
        - inventories_auth:
            - 'read:inventories'
            - 'write:inventories'
      responses:
        '200':
          description: OK response
          content:
            application/json:
              schema:
                type: string
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      summary: get ALL list of inventories
      operationId: getinventories
      tags:
        - inventories
      security:
        - inventories_auth:
            - 'read:inventories'
      responses:
        '200':
          description: OK response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Inventory'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /updateInventory:
    put:
      summary: update inventory with new transaction
      operationId: updateInventory
      requestBody:
        description: a inventory item
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Inventory'
      tags:
        - inventories
      security:
        - inventories_auth:
            - 'read:inventories'
            - 'write:inventories'
      responses:
        '200':
          description: OK response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /reset:
    put:
      summary: reset inventory with new transaction
      operationId: resetInventory
      requestBody:
        description: a inventory item
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Inventory'
      tags:
        - inventories
      security:
        - inventories_auth:
            - 'read:inventories'
            - 'write:inventories'
      responses:
        '200':
          description: OK response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  securitySchemes:
    inventories_auth:
      type: oauth2
      description: This API uses OAuth 2 with the client credential grant flow.
      flows:
        clientCredentials:
          tokenUrl: 'https://localhost:6882/token'
          scopes:
            'write:inventories': modify inventories
            'read:inventories': read inventories
  schemas:
    Inventory:
      type: object
      required:
        - productId
      properties:
        productId:
          type: integer
          format: int64
        productName:
          type: string
        quantity:
          type: integer
          format: int64
        unitPrice:
          type: number
        inventorytype:
          type: string
          nullable: true
          enum:
            - INBOUND
            - OUTBOUND
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
